<div style="margin-bottom: 3vh"></div>

<form class="col s12" action="<%= invoices_charts_path %>" method="GET">
  <div class="row">
    <div class="input-field col s12 m4">
      <select name="legislature_code" id="legislature_code">
        <% @legislature_codes.each do |code| %>
          <option <%= 'selected' if @filter[:legislature_code] == code %> value="<%= code %>"><%= code %></option>
        <% end %>
      </select>
      <label for="legislature_code">Legislatura</label>
    </div>
    <div class="input-field col s12 m4">
      <select name="year" id="year">
        <% @years.each do |year| %>
          <option <%= 'selected' if @filter[:year] == year %> value="<%= year %>"><%= year %></option>
        <% end %>
      </select>
      <label for="year">Ano</label>
    </div>
    <div class="input-field col s12 m4">
      <select name="month" id="month">
        <option <%= 'selected' if @filter[:month].nil? %> <%= 'selected' if @filter[:year].nil? %> value="">Todos os meses</option>
        <option <%= 'selected' if @filter[:month] == '1' %> value="1">Janeiro</option>
        <option <%= 'selected' if @filter[:month] == '2' %> value="2">Fevereiro</option>
        <option <%= 'selected' if @filter[:month] == '3' %> value="3">Março</option>
        <option <%= 'selected' if @filter[:month] == '4' %> value="4">Abril</option>
        <option <%= 'selected' if @filter[:month] == '5' %> value="5">Maio</option>
        <option <%= 'selected' if @filter[:month] == '6' %> value="6">Junho</option>
        <option <%= 'selected' if @filter[:month] == '7' %> value="7">Julho</option>
        <option <%= 'selected' if @filter[:month] == '8' %> value="8">Agosto</option>
        <option <%= 'selected' if @filter[:month] == '9' %> value="9">Setembro</option>
        <option <%= 'selected' if @filter[:month] == '10' %> value="10">Outubro</option>
        <option <%= 'selected' if @filter[:month] == '11' %> value="11">Novembro</option>
        <option <%= 'selected' if @filter[:month] == '12' %> value="12">Dezembro</option>
      </select>
      <label for="month">Mês</label>
    </div>
  </div>

  <div class="row">
    <div class="input-field col s12 m6">
      <select name="political_party" id="political_party">
        <option value="">Todos os partidos</option>
        <% @political_parties.each do |political_party| %>
          <option <%= 'selected' if @filter[:political_party] == political_party %> value="<%= political_party %>"><%= "#{political_party} - #{PoliticalPartyHelper.political_party_name_from_political_party_code(political_party)}" %></option>
        <% end %>
      </select>
      <label for="political_party">Partido</label>
    </div>
    <div class="input-field col s12 m6">
      <select name="state" id="state">
        <% @states.each do |state| %>
          <option <%= 'selected' if @filter[:state] == state %> value="<%= state %>"><%= StateHelper.state_name_from_state_code(state) %></option>
        <% end %>
      </select>
      <label for="state">Estado</label>
    </div>
  </div>

  <div class="row">
    <div class="input-field col s12 m6">
      <select name="deputy_taxpayer" id="deputy_taxpayer" class="icons">
        <option value="">Todos os deputados</option>
        <% @deputies.each do |deputy| %>
          <option <%= 'selected' if @filter[:deputy_taxpayer] == deputy.taxpayer %> value="<%= deputy.taxpayer %>" data-icon="<%= deputy.photo_url %>"><%= deputy.name %>, <%= deputy.legislatures.last.political_party %></option>
        <% end %>
      </select>
      <label for="deputy_taxpayer">Deputado</label>
    </div>
    <div class="input-field col s12 m6">
      <select name="provider_identifier" id="provider_identifier">
        <option value="">Todos os fornecedores</option>
        <% @providers.each do |provider| %>
          <option <%= 'selected' if @filter[:provider_identifier] == provider.provider_identifier && !provider.provider_identifier.blank? %> value="<%= provider.provider_identifier %>"><%= "#{provider.name} - #{provider.provider_identifier}" %></option>
        <% end %>
      </select>
      <label for="provider_identifier">Fornecedor</label>
    </div>
  </div>

  <button type="submit" class="waves-effect waves-light btn blue">Filtrar</button>
  <a href="<%= invoices_charts_path %>" class="waves-effect waves-light btn red lighten-2">Resetar filtro</a>
</form>

<% if @data_charts.present? && @data_charts.count.positive? %>
  <br />
  <% if @monthly_expenses.present? && @monthly_expenses.count.positive? && @daily_expenses.nil? %>
    <div id="monthlyExpensePanel">
      <div class="divider"></div>
      <div class="col s12 m12">
        <h5>Gastos mensais em <%= @filter[:year] %><%= " - #{@filter[:political_party]}" if @filter[:political_party].present? && !@filter[:political_party].empty? %></h5>
        <canvas id="monthlyExpenseChart" with="100%" height="100"></canvas>
      </div>
    </div>

    <%= content_tag :div, id: "monthlyExpenses", data: {temp: @monthly_expenses} do %><% end %>
  <% end %>

  <% if @daily_expenses.present? && @daily_expenses.count.positive? && @monthly_expenses.nil? %>
    <br />
    <div id="dailyExpensesPanel" class="row">
      <div class="divider"></div>
      <div class="col s12 m12">
        <h5>Gastos do mês de <%= MonthHelper.month_name_from_month_code(@filter[:month]) %></h5>
        <canvas id="dailyExpensesChart" with="100%" height="100"></canvas>
      </div>
    </div>

    <%= content_tag :div, id: "dailyExpenses", data: {temp: @daily_expenses} do %><% end %>
    <%= content_tag :div, id: "dailyExpensesMonth", data: {temp: MonthHelper.month_name_from_month_code(@filter[:month])} do %><% end %>
  <% end %>

  <div class="row">
    <br />
    <div class="divider"></div>
    <div class="col s12 m6">
      <% if @deputy_expenses.present? && @deputy_expenses.count.positive? %>
        <div id="deputyExpensesPanel" class="row">
          <div class="col s12 m12">
            <h5>Gastos por deputado</h5>
            <canvas id="deputyExpensesChart" with="100%" height="100"></canvas>
          </div>
        </div>

        <%= content_tag :div, id: "deputyExpenses", data: {temp: @deputy_expenses} do %><% end %>
      <% end %>
    </div>

    <div class="col s12 m6">
      <% if @political_party_expenses.present? && @political_party_expenses.count.positive? %>
        <div id="politicalPartyExpensesPanel" class="row">
          <div class="col s12 m12">
            <h5>Gastos por partido</h5>
            <canvas id="politicalPartyExpensesChart" with="100%" height="100"></canvas>
          </div>
        </div>

        <%= content_tag :div, id: "politicalPartyExpenses", data: {temp: @political_party_expenses} do %><% end %>
      <% end %>
    </div>
  </div>

  <div class="row">
    <div class="divider"></div>
    <div class="col s12 m6">
      <% if @type_expenses.present? && @type_expenses.count.positive? %>
        <div id="typeExpensesPanel" class="row">
          <div class="col s12 m12">
            <h5>Tipo de despesa</h5>
            <canvas id="typeExpensesChart" with="100%" height="100"></canvas>
          </div>
        </div>

        <%= content_tag :div, id: "typeExpenses", data: {temp: @type_expenses} do %><% end %>
      <% end %>
    </div>

    <div class="col s12 m6">
      <% if @provider_expenses.present? && @provider_expenses.count.positive? %>
        <div id="providerExpensesPanel" class="row">
          <div class="col s12 m12">
            <h5>Gastos por fornecedor</h5>
            <canvas id="providerExpensesChart" with="100%" height="100"></canvas>
          </div>
        </div>

        <%= content_tag :div, id: "providerExpenses", data: {temp: @provider_expenses} do %><% end %>
      <% end %>
    </div>
  </div>
<% else %>
  <div class="row" style="margin-top: 7vh">
    <div class="center-align valign-center" style="height: 50vh">
      <h5>Não foram encontrados dados para sua pesquisa</h5><br />
      <%= link_to "Resetar filtros", invoices_charts_path, title: "Detalhar deputado", class: "waves-effect waves-teal btn" %>
      <%= link_to "Cadastrar novos deputados", deputies_new_path, title: "Detalhar deputado", class: "waves-effect waves-teal btn" %>
    </div>
  </div>
<% end %>
<br />

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      let elems = document.querySelectorAll('select');
      let instances = M.FormSelect.init(elems);

      plotMonthlyExpensesChart()
      plotDailyExpensesChart()
      plotPoliticalPartyExpensesChart()
      plotDeputyExpensesChart()
      plotTypeExpensesChart()
      plotProviderExpensesChart()
    })

    const plotMonthlyExpensesChart = () => {
      let monthlyExpensesField = document.getElementById("monthlyExpenses")

      if (!!monthlyExpensesField) {
        let data = JSON.parse(monthlyExpensesField.dataset.temp)
        let ctx = document.getElementById('monthlyExpenseChart').getContext('2d')
        let labels = Object.keys(data).map(label => new Date(label).toLocaleDateString('pt-BR', { month: 'long' }))
        let values = Object.values(data)
        let colors = dynamicColors(values)
        console.log(values);

        plotBarChart(ctx, labels, values, colors.backgroundColors, colors.borderColors)
      }
    }

    const plotDailyExpensesChart = function () {
      let dailyExpensesField = document.getElementById("dailyExpenses")

      if (!!dailyExpensesField) {
        let data = JSON.parse(dailyExpensesField.dataset.temp)
        let month = document.getElementById("dailyExpensesMonth").dataset.temp
        let ctx = document.getElementById('dailyExpensesChart').getContext('2d')
        let labels = Object.keys(data).map(label => new Date(label).toLocaleDateString('pt-BR'))
        let values = Object.values(data)
        let colors = dynamicColors([1])

        console.log(labels);

        plotLineChart(ctx, labels, values, colors.borderColors, month)
      }
    }

    const plotPoliticalPartyExpensesChart = function () {
      let politicalPartyExpensesField = document.getElementById("politicalPartyExpenses")

      if (!!politicalPartyExpensesField) {
        let data = JSON.parse(politicalPartyExpensesField.dataset.temp)
        let ctx = document.getElementById('politicalPartyExpensesChart').getContext('2d')
        let labels = Object.keys(data)
        let values = Object.values(data)
        let colors = dynamicColors(values)
        let type = 'polarArea'
        let label = 'Gastos por partido'

        plotGenericChart(ctx, type, label, labels, values, colors.borderColors)
      }
    }

    const plotDeputyExpensesChart = function () {
      let deputyExpensesField = document.getElementById("deputyExpenses")

      if (!!deputyExpensesField) {
        let data = JSON.parse(deputyExpensesField.dataset.temp)
        let ctx = document.getElementById('deputyExpensesChart').getContext('2d')
        let labels = Object.keys(data)
        let values = Object.values(data)
        let colors = dynamicColors(values)
        let type = 'polarArea'
        let label = 'Gastos por partido'

        plotGenericChart(ctx, type, label, labels, values, colors.borderColors)
      }
    }

    const plotProviderExpensesChart = function () {
      let providerExpensesField = document.getElementById("providerExpenses")

      if (!!providerExpensesField) {
        let data = JSON.parse(providerExpensesField.dataset.temp)
        let ctx = document.getElementById('providerExpensesChart').getContext('2d')
        let labels = Object.keys(data)
        let values = Object.values(data)
        let colors = dynamicColors(values)
        let type = 'pie'
        let label = 'Valor por fornecedor'

        plotGenericChart(ctx, type, label, labels, values, colors.borderColors)
      }
    }

    const plotTypeExpensesChart = function () {
      let typeExpensesField = document.getElementById("typeExpenses")

      if (!!typeExpensesField) {
        let data = JSON.parse(typeExpensesField.dataset.temp)
        let ctx = document.getElementById('typeExpensesChart').getContext('2d')
        let labels = Object.keys(data)
        let values = Object.values(data)
        let colors = dynamicColors(values)
        let type = 'pie'
        let label = 'Tipo de despesa'

        plotGenericChart(ctx, type, label, labels, values, colors.borderColors)
      }
    }

    const plotBarChart = (ctx, labels, values, backgroundColors, borderColors) => {
      let data = {
        labels: labels,
        datasets: [{
          label: 'Gastos no ano de 2021',
          data: values,
          backgroundColor: backgroundColors,
          borderColor: borderColors,
          borderWidth: 1
        }]
      }

      let options = {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }

      new Chart(ctx, {
        type: 'bar',
        data,
        options
      })
    }

    const plotLineChart = (ctx, labels, values, borderColor, month) => {
      let data = {
        labels,
        datasets: [{
          label: `Gastos de ${month}`,
          data: values,
          fill: true,
          borderColor: borderColor,
          tension: 0.1
        }]
      }

      new Chart(ctx, {
        type: 'line',
        data
      })
    }

    const plotGenericChart = (ctx, type, label, labels, values, backgroundColor) => {
      let data = {
        labels,
        datasets: [{
          label,
          data: values,
          backgroundColor,
        }]
      }

      new Chart(ctx, {
        type,
        data
      })
    }

    const dynamicColors = data => {
      let colors = { backgroundColors: [], borderColors: [] }

      for (let i in data) {
        let r = Math.floor(Math.random() * 255)
        let g = Math.floor(Math.random() * 255)
        let b = Math.floor(Math.random() * 255)
        let backgroundColor = `rgba(${r},${g},${b}, .75)`
        let borderColor = `rgba(${r},${g},${b}, 1)`

        colors.backgroundColors.push(backgroundColor)
        colors.borderColors.push(borderColor)
      }

      return colors
    }
  </script>
